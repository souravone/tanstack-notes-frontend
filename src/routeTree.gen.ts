/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterPageIndexRouteImport } from './routes/registerPage/index'
import { Route as LoginPageIndexRouteImport } from './routes/loginPage/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoStoreRouteImport } from './routes/demo.store'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterPageIndexRoute = RegisterPageIndexRouteImport.update({
  id: '/registerPage/',
  path: '/registerPage/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginPageIndexRoute = LoginPageIndexRouteImport.update({
  id: '/loginPage/',
  path: '/loginPage/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/loginPage': typeof LoginPageIndexRoute
  '/registerPage': typeof RegisterPageIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/loginPage': typeof LoginPageIndexRoute
  '/registerPage': typeof RegisterPageIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/loginPage/': typeof LoginPageIndexRoute
  '/registerPage/': typeof RegisterPageIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/loginPage'
    | '/registerPage'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/loginPage'
    | '/registerPage'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/loginPage/'
    | '/registerPage/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  LoginPageIndexRoute: typeof LoginPageIndexRoute
  RegisterPageIndexRoute: typeof RegisterPageIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/registerPage/': {
      id: '/registerPage/'
      path: '/registerPage'
      fullPath: '/registerPage'
      preLoaderRoute: typeof RegisterPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/loginPage/': {
      id: '/loginPage/'
      path: '/loginPage'
      fullPath: '/loginPage'
      preLoaderRoute: typeof LoginPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  LoginPageIndexRoute: LoginPageIndexRoute,
  RegisterPageIndexRoute: RegisterPageIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
